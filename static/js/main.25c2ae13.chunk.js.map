{"version":3,"sources":["SeasonDisplay.js","Loder.js","index.js"],"names":["seasonConfig","winter","text","iconName","summer","SeasonDisplay","props","lat","month","season","Date","getMonth","className","Loder","message","defaultProps","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","borderContent","React","Component","ReactDOM","render","document","querySelector"],"mappings":"sMAGMA,G,MAAe,CACnBC,OAAQ,CACNC,KAAM,8CACNC,SAAU,aAEZC,OAAQ,CACNF,KAAM,mCACNC,SAAU,SAwBCE,EAZO,SAACC,GACrB,IATiBC,EAAKC,EAShBC,GATWF,EASQD,EAAMC,KATTC,GASc,IAAIE,MAAOC,YARnC,GAAKH,EAAQ,EAChBD,EAAM,GAAK,SAAW,SAEtBA,EAAM,GAAK,SAAW,UAIA,EAEJP,EAAaS,GAAhCP,EAFuB,EAEvBA,KAAMC,EAFiB,EAEjBA,SACd,OACE,sBAAKS,UAAS,yBAAoBH,GAAlC,UACE,mBAAGG,UAAS,yBAAoBT,EAApB,WACZ,6BAAKD,IACL,mBAAGU,UAAS,0BAAqBT,EAArB,eC3BZU,EAAQ,SAACP,GACb,OACE,qBAAKM,UAAU,mBAAf,SACE,qBAAKA,UAAU,qBAAf,SACE,6BAAKN,EAAMQ,eAOnBD,EAAME,aAAe,CACnBD,QAAS,cAIID,QCbTG,E,4MACJC,MAAQ,CAAEV,IAAK,KAAMW,aAAc,I,kEAGd,IAAD,OAClBC,OAAOC,UAAUC,YAAYC,oBAC3B,SAACC,GAAD,OAAc,EAAKC,SAAS,CAAEjB,IAAKgB,EAASE,OAAOC,cACnD,SAACC,GAAD,OAAS,EAAKH,SAAS,CAAEN,aAAcS,EAAIb,e,sCAM7C,OAAIc,KAAKX,MAAMC,eAAiBU,KAAKX,MAAMV,IAClC,kDAAqBqB,KAAKX,MAAMC,iBAEpCU,KAAKX,MAAMC,cAAgBU,KAAKX,MAAMV,IAClC,cAAC,EAAD,CAAeA,IAAKqB,KAAKX,MAAMV,MAEjC,cAAC,EAAD,CAAOO,QAAQ,iC,+BAItB,OAAO,qBAAKF,UAAU,aAAf,SAA6BgB,KAAKC,sB,GAvB3BC,IAAMC,WA2BxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.25c2ae13.chunk.js","sourcesContent":["import \"./SeasonDisplay.css\";\r\nimport React from \"react\";\r\n\r\nconst seasonConfig = {\r\n  winter: {\r\n    text: \" Uff, khub thanda ..Mojai moja 😍\",\r\n    iconName: \"snowflake\",\r\n  },\r\n  summer: {\r\n    text: \"gorom manei jhamla 😪 \",\r\n    iconName: \"sun\",\r\n  },\r\n};\r\n\r\nconst getSeason = (lat, month) => {\r\n  if (month > 2 && month < 9) {\r\n    return lat > 25 ? \"Summer\" : \"winter\";\r\n  } else {\r\n    return lat < 25 ? \"winter\" : \"summer\";\r\n  }\r\n};\r\n\r\nconst SeasonDisplay = (props) => {\r\n  const season = getSeason(props.lat, new Date().getMonth());\r\n  const { text, iconName } = seasonConfig[season];\r\n  return (\r\n    <div className={`season-display ${season}`}>\r\n      <i className={`icon-left huge ${iconName} icon`} />\r\n      <h1>{text}</h1>\r\n      <i className={`icon-right huge ${iconName} icon`} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SeasonDisplay;\r\n","import React from \"react\";\r\n\r\nconst Loder = (props) => {\r\n  return (\r\n    <div className=\"ui active dimmer\">\r\n      <div className=\"ui big text loader\">\r\n        <h1>{props.message}</h1>\r\n        {/* <h1>{props.message || \"Loading\"}</h1> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoder.defaultProps = {\r\n  message: \"Loading...\",\r\n};\r\n//same kaj {/* <h1>{props.message || \"Loading\"}</h1> */}\r\n\r\nexport default Loder;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport SeasonDisplay from \"./SeasonDisplay\";\r\nimport Loder from \"./Loder\";\r\n\r\nclass App extends React.Component {\r\n  state = { lat: null, errorMessage: \"\" };\r\n\r\n  //lifecycle method used\r\n  componentDidMount() {\r\n    window.navigator.geolocation.getCurrentPosition(\r\n      (position) => this.setState({ lat: position.coords.latitude }),\r\n      (err) => this.setState({ errorMessage: err.message })\r\n    );\r\n  }\r\n\r\n  //helper method\r\n  borderContent() {\r\n    if (this.state.errorMessage && !this.state.lat) {\r\n      return <div>Error Message: {this.state.errorMessage}</div>;\r\n    }\r\n    if (!this.state.errorMessage && this.state.lat) {\r\n      return <SeasonDisplay lat={this.state.lat} />;\r\n    }\r\n    return <Loder message=\"Please allow your location\" />;\r\n  }\r\n  //React says we have to dfine render\r\n  render() {\r\n    return <div className=\"border red\">{this.borderContent()}</div>;\r\n  }\r\n}\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}